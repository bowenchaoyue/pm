<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chaowen.dao.ProductMapper">

	<resultMap type="productVO" id="baseResult">
		<id column="id" property="id" jdbcType="BIGINT"></id>
		<result column="name" property="name" jdbcType="VARCHAR"></result>
		<result column="introduction" property="introduction" jdbcType="VARCHAR"></result>
		<result column="price" property="price" jdbcType="DECIMAL"></result>
		<result column="detail" property="detail" jdbcType="VARCHAR"></result>
		<result column="series" property="series" jdbcType="TINYINT"></result>
		<result column="lang" property="lang" jdbcType="TINYINT"></result>
		<!--共有部分 -->
		<result column="delete_flag" property="deleteFlag" jdbcType="TINYINT"></result>
		<result column="create_id" property="createId" jdbcType="BIGINT"></result>
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP"></result>
		<result column="update_id" property="updateId" jdbcType="BIGINT"></result>
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP"></result>
	</resultMap>
	
	<sql id="tableName">product</sql>
	<sql id="baseColumn">id,name,introduction,price,detail,series,delete_flag,create_id,create_time,update_id,update_time,lang</sql>
	<sql id="noIdColumn">name,introduction,price,detail,series,delete_flag,create_id,create_time,update_id,update_time,lang</sql>



	<insert id="add" parameterType="productDTO" useGeneratedKeys="true" keyProperty="id">
		insert into <include refid="tableName"></include>
		(<include refid="noIdColumn"></include>)
		values(#{name},#{introduction},#{price},#{detail},#{series},0,#{createId},now(),#{updateId},now(),#{lang})
	</insert>


	<update id="update" parameterType="productDTO">
		UPDATE <include refid="tableName"></include>
		set update_time =now()
		<if test="updateId != null">
			,update_id = #{updateId}
		</if>
		<if test="introduction != null and introduction != ''">
			,introduction = #{introduction}
		</if>
		<if test="name != null and name != ''">
			,name = #{name}
		</if>
		<if test="detail != null and detail != ''">
			,detail = #{detail}
		</if>
		<if test="series != null">
			,series = #{series}
		</if>
		WHERE id = #{id}
	</update>
	
	<update id="delete" parameterType="productDTO">
		update <include refid="tableName"></include>
		set delete_flag = 1,
		update_id = #{updateId},
		update_time = now()
		where delete_flag = 0
		<if test="id != null">
			and id = #{id}
		</if>
		<if test="ids != null">
			or id in
			<foreach collection="ids" item="item" index="index" open="(" close=")" separator=",">
				#{item}
			</foreach>
		</if>
	</update>
	


    <sql id="searchCondition">
        WHERE delete_flag = 0
            <if test="name != null and name !='' ">
                AND name LIKE concat("%",#{name},"%")
            </if>
            <if test="startTime != null">
                and create_time &gt;= #{startTime}
            </if>
            <if test="endTime != null">
                and create_time &lt;= #{endTime}
            </if>
			<if test="lang != null">
				and lang = #{lang}
			</if>
			<if test="id != null">
				and id = #{id}
			</if>
			<if test="ids != null">
				and id in
				<foreach collection="ids" item="item" open="(" close=")" separator=",">
					#{item}
				</foreach>
			</if>
		<choose>
			<when test="sort != null and sort != ''">
				ORDER BY ${sort} ${order}
			</when>
			<otherwise>
				ORDER BY create_time DESC
			</otherwise>
		</choose>
    </sql>
	
	<select id="queryByPage" parameterType="productDTO" resultMap="baseResult">
		select <include refid="baseColumn"></include>
		from <include refid="tableName"></include>
	    <include refid="searchCondition"/>
	</select>

	<select id="queryById" parameterType="productDTO" resultMap="baseResult">
		SELECT <include refid="baseColumn"/>
		FROM <include refid="tableName"/>
		WHERE delete_flag = 0
		and id = #{id}
	</select>



	
	
</mapper>